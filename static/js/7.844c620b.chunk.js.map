{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"names":["ComicsList","useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","className","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","display","onClick","ComicsPage","Helmet","name","content","AppBanner","_toConsumableArray","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError"],"mappings":"+MA4FeA,EAnFI,WAElB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,oBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA4BJ,mBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAsCN,oBAAS,GAA/C,mBAAOO,EAAP,KAAoBC,EAApB,KAEA,EAAuCC,cAAhCC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,aAGvBC,qBAAU,WACTC,EAAUT,GAAQ,KACjB,IAEF,IAAMS,EAAY,SAACT,EAAQU,GAChBX,GAAVW,GACAH,EAAaP,GAAQW,KAAKC,IAGrBA,EAAqB,SAACC,GAC3B,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IAC1BD,GAAQ,GAETjB,EAAc,GAAD,mBAAKD,GAAL,YAAoBiB,KACjCd,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeW,IA+BhB,IAAME,EA3BN,SAAqBC,GAClB,IAAMD,EAAQC,EAAIC,KAAI,SAACC,EAAMC,GAC3B,OACE,oBAAIC,UAAU,eAAd,SACE,eAAC,IAAD,CAAMC,GAAE,kBAAaH,EAAKI,IAA1B,UACE,qBACEC,IAAKL,EAAKM,UACVC,IAAKP,EAAKQ,MACVN,UAAU,qBAEZ,qBAAKA,UAAU,oBAAf,SAAoCF,EAAKQ,QACzC,qBAAKN,UAAU,qBAAf,SAAqCF,EAAKS,YARZR,MActC,OAEQ,oBAAIC,UAAU,eAAd,SACKL,IAOFa,CAAYjC,GAEnBkC,EAAexB,EAAQ,cAACyB,EAAA,EAAD,IAAmB,KAC1CC,EAAU3B,IAAYP,EAAiB,cAACmC,EAAA,EAAD,IAAc,KAE5D,OACG,qCACGH,EACAE,EACAhB,EACD,wBACEK,UAAU,mCACVa,SAAUpC,EACVqC,MAAO,CAAEC,QAASlC,EAAc,OAAS,SACzCmC,QAAS,kBAAM5B,EAAUT,IAJ3B,SAME,qBAAKqB,UAAU,QAAf,6B,QC/DOiB,UAfI,WACjB,OACE,qCACE,eAACC,EAAA,EAAD,WACE,sBACFC,KAAK,cACPC,QAAQ,iCACJ,mDAEF,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,S,wFCXS,SAASC,EAAmB1B,GACzC,OCJa,SAA4BA,GACzC,GAAI2B,MAAMC,QAAQ5B,GAAM,OAAO,OAAA6B,EAAA,GAAiB7B,GDGzC,CAAkBA,IELZ,SAA0B8B,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgB9B,IAAQ,OAAAmC,EAAA,GAA2BnC,IGLvE,WACb,MAAM,IAAIoC,UAAU,wIHIwE","file":"static/js/7.844c620b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n\tconst [comicsList, setComicsList] = useState([])\n\tconst [newItemLoading, setNewItemLoading] = useState(false)\n\tconst [offset, setOffset] = useState(0)\n\tconst [comicsEnded, setComicsEnded] = useState(false)\n\n\tconst {loading, error, getAllComics} = useMarvelService()\n\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true)\n\t},[])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true)\n\t\tgetAllComics(offset).then(onComicsListLoaded)\n\t}\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true\n\t\t}\n\t\tsetComicsList([...comicsList, ...newComicsList])\n\t\tsetNewItemLoading(false)\n\t\tsetOffset(offset + 8)\n\t\tsetComicsEnded(ended)\n\t}\n\n\n\tfunction renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n       \n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n    )\n\t}\n\n\n\n\tconst items = renderItems(comicsList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n\treturn (\n    <>\n      {errorMessage}\n      {spinner}\n      {items}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </>\n  );\n}\n\n\n\n\nexport default ComicsList;\n\n\n\n\n","\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport {Helmet} from \"react-helmet\"\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta \r\n\t\t  \t\tname=\"description\" \r\n\t\t\t\tcontent=\"Page with list of our comics\" />\r\n        <title>Comics page</title>\r\n      </Helmet>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}